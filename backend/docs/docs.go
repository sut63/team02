// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Pregnancystatuss": {
            "post": {
                "description": "Create pregnancystatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create pregnancystatus",
                "operationId": "create-pregnancystatus",
                "parameters": [
                    {
                        "description": "Pregnancystatus entity",
                        "name": "pregnancystatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Pregnancystatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Pregnancystatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Riskss": {
            "post": {
                "description": "Create risks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create risks",
                "operationId": "create-risks",
                "parameters": [
                    {
                        "description": "Risks entity",
                        "name": "risks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Risks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Risks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Surgeryappointments": {
            "post": {
                "description": "Create Surgeryappointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Surgeryappointment",
                "operationId": "create-Surgeryappointment",
                "parameters": [
                    {
                        "description": "Surgeryappointment entity",
                        "name": "Surgeryappointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Surgeryappointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Surgeryappointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/antenatalinformations": {
            "get": {
                "description": "list antenatalinformation entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List antenatalinformation entities",
                "operationId": "list-antenatalinformation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Antenatalinformation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create antenatalinformation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create antenatalinformation",
                "operationId": "create-antenatalinformation",
                "parameters": [
                    {
                        "description": "Antenatalinformation entity",
                        "name": "antenatalinformation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Antenatalinformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Antenatalinformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/antenatalinformations/{id}": {
            "get": {
                "description": "get antenatalinformation by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a antenatalinformation entity by ID",
                "operationId": "get-antenatalinformation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Antenatalinformation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Antenatalinformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update antenatalinformation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a antenatalinformation entity by ID",
                "operationId": "update-antenatalinformation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Antenatalinformation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Antenatalinformation entity",
                        "name": "antenatalinformation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Antenatalinformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Antenatalinformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get antenatalinformation by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a antenatalinformation entity by ID",
                "operationId": "delete-antenatalinformation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Antenatalinformation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bonediseases": {
            "get": {
                "description": "list bonedisease entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bonedisease entities",
                "operationId": "list-bonedisease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bonedisease"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bonedisease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bonedisease",
                "operationId": "create-bonedisease",
                "parameters": [
                    {
                        "description": "Bonedisease entity",
                        "name": "bonedisease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Bonedisease"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bonedisease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bonediseases/{id}": {
            "delete": {
                "description": "get bonedisease by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a bonedisease entity by ID",
                "operationId": "delete-bonedisease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bonedisease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/checksymptomss": {
            "get": {
                "description": "list checksymptoms entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List checksymptoms entities",
                "operationId": "list-checksymptoms",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Checksymptoms"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create checksymptoms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create checksymptoms",
                "operationId": "create-checksymptoms",
                "parameters": [
                    {
                        "description": "Checksymptoms entity",
                        "name": "checksymptoms",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Checksymptoms"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Checksymptoms"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dentalappointments": {
            "get": {
                "description": "list dentalappointment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List dentalappointment entities",
                "operationId": "list-dentalappointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Dentalappointment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create dentalappointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create dentalappointment",
                "operationId": "create-dentalappointment",
                "parameters": [
                    {
                        "description": "dentalappointment entity",
                        "name": "dentalappointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Dentalappointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Dentalappointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dentalappointments/{id}": {
            "delete": {
                "description": "get dentalappointment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a dentalappointment entity by ID",
                "operationId": "delete-dentalappointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "dentalappointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dentalkinds": {
            "get": {
                "description": "list dentalkind entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List dentalkind entities",
                "operationId": "list-dentalkind",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Dentalkind"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create dentalkind",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create dentalkind",
                "operationId": "create-dentalkind",
                "parameters": [
                    {
                        "description": "dentalkind entity",
                        "name": "dentalkind",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Dentalkind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Dentalkind"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dentalkinds/{id}": {
            "get": {
                "description": "get dentalkind by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a dentalkind entity by ID",
                "operationId": "get-dentalkind",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dentalkind ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Dentalkind"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update dentalkind by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a dentalkind entity by ID",
                "operationId": "update-dentalkind",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dentalkind ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dentalkind entity",
                        "name": "dentalkind",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Dentalkind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Dentalkind"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get dentalkind by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a dentalkind entity by ID",
                "operationId": "delete-dentalkind",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dentalkind ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/diseases": {
            "get": {
                "description": "list disease entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List disease entities",
                "operationId": "list-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Disease"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create disease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create disease",
                "operationId": "create-disease",
                "parameters": [
                    {
                        "description": "disease entity",
                        "name": "disease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/diseases/{id}": {
            "get": {
                "description": "get disease by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a disease entity by ID",
                "operationId": "get-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update disease by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a disease entity by ID",
                "operationId": "update-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disease entity",
                        "name": "disease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get disease by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a disease entity by ID",
                "operationId": "delete-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/doctorordersheets": {
            "get": {
                "description": "list doctorordersheet entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List doctorordersheet entities",
                "operationId": "list-doctorordersheet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.DoctorOrderSheet"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create doctorordersheet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create doctorordersheet",
                "operationId": "create-doctorordersheet",
                "parameters": [
                    {
                        "description": "doctorordersheet entity",
                        "name": "doctorordersheet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.DoctorOrderSheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.DoctorOrderSheet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/doctorordersheets/{id}": {
            "get": {
                "description": "get doctorordersheet by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a doctorordersheet entity by ID",
                "operationId": "get-doctorordersheet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DoctorOrderSheet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.DoctorOrderSheet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update doctorordersheet by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "update-doctorordersheet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DoctorOrderSheet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DoctorOrderSheet entity",
                        "name": "doctorordersheet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.DoctorOrderSheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.DoctorOrderSheet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get doctorordersheet by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a doctorordersheet entity by ID",
                "operationId": "delete-doctorordersheet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DeleteDoctorOrderSheet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patients": {
            "get": {
                "description": "list patient entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List patient entities",
                "operationId": "list-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Patient"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create patient",
                "operationId": "create-patient",
                "parameters": [
                    {
                        "description": "Patient entity",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "description": "get patient by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a patient entity by ID",
                "operationId": "get-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update patient by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a patient entity by ID",
                "operationId": "update-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient entity",
                        "name": "Patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get patient by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a patient entity by ID",
                "operationId": "delete-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/personnels": {
            "get": {
                "description": "list Personnel entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List personnel entities",
                "operationId": "list-personnel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Personnel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create personnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create personnel",
                "operationId": "create-personnel",
                "parameters": [
                    {
                        "description": "Personnel entity",
                        "name": "personnel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Personnel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Personnel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/personnels/{id}": {
            "get": {
                "description": "get personnel by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a personnel entity by ID",
                "operationId": "get-personnel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Personnel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Personnel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update personnel by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a personnel entity by ID",
                "operationId": "update-personnel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Personnel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Personnel entity",
                        "name": "Personnel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Personnel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Personnel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get personnel by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a personnel entity by ID",
                "operationId": "delete-personnel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Personnel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/physicaltherapyrecords": {
            "get": {
                "description": "list Physicaltherapyrecord entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List Physicaltherapyrecord entities",
                "operationId": "list-Physicaltherapyrecord",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Physicaltherapyrecords"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create physicaltherapyrecord",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create physicaltherapyrecord",
                "operationId": "create-physicaltherapyrecord",
                "parameters": [
                    {
                        "description": "Physicaltherapyrecord entity",
                        "name": "physicaltherapyrecord",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Physicaltherapyrecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Physicaltherapyrecords"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/physicaltherapyrecords/{id}": {
            "delete": {
                "description": "get approvedresult by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a approvedresult entity by ID",
                "operationId": "delete-approvedresult",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Physicaltherapyrecord ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/physicaltherapyrooms": {
            "get": {
                "description": "list physicaltherapyroom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List physicaltherapyroom entities",
                "operationId": "list-physicaltherapyroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Physicaltherapyroom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create physicaltherapyroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create physicaltherapyroom",
                "operationId": "create-physicaltherapyroom",
                "parameters": [
                    {
                        "description": "Physicaltherapyroom entity",
                        "name": "physicaltherapyroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Physicaltherapyroom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Physicaltherapyroom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/physicaltherapyrooms/{id}": {
            "get": {
                "description": "get physicaltherapyroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a physicaltherapyroom entity by ID",
                "operationId": "get-physicaltherapyroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Physicaltherapyroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Physicaltherapyroom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/pregnancystatuss": {
            "get": {
                "description": "list pregnancystatus entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List pregnancystatus entities",
                "operationId": "list-pregnancystatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Pregnancystatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/pregnancystatuss/{id}": {
            "get": {
                "description": "get pregnancystatus by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a pregnancystatus entity by ID",
                "operationId": "get-pregnancystatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pregnancystatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Pregnancystatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/remedys": {
            "get": {
                "description": "list remedy entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List remedy entities",
                "operationId": "list-remedy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Remedy"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create remedy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create remedy",
                "operationId": "create-remedy",
                "parameters": [
                    {
                        "description": "Remedy entity",
                        "name": "remedy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Remedy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Remedy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/remedys/{id}": {
            "get": {
                "description": "get remedy by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a remedy entity by ID",
                "operationId": "get-remedy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Remedy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Remedy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update remedy by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a remedy entity by ID",
                "operationId": "update-remedy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Remedy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Remedy entity",
                        "name": "Remedy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Remedy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Remedy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get remedy by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a remedy entity by ID",
                "operationId": "delete-remedy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Remedy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/riskss": {
            "get": {
                "description": "list risks entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List risks entities",
                "operationId": "list-risks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Risks"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/riskss/{id}": {
            "get": {
                "description": "get risks by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a risks entity by ID",
                "operationId": "get-risks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Risks ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Risks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statuss": {
            "get": {
                "description": "list status entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List status entities",
                "operationId": "list-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Status"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create status",
                "operationId": "create-status",
                "parameters": [
                    {
                        "description": "Status entity",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statuss/{id}": {
            "get": {
                "description": "get status by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a status entity by ID",
                "operationId": "get-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/surgeryappointments": {
            "get": {
                "description": "list surgeryappointment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List surgeryappointment entities",
                "operationId": "list-surgeryappointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Surgeryappointment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/surgeryappointments/{id}": {
            "get": {
                "description": "get surgeryappointment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a surgeryappointment entity by ID",
                "operationId": "get-surgeryappointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "surgeryappointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Surgeryappointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update surgeryappointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a surgeryappointment entity by ID",
                "operationId": "update-surgeryappointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Surgeryappointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "surgeryappointment entity",
                        "name": "surgeryappointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Surgeryappointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Surgeryappointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get surgeryappointment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a surgeryappointment entity by ID",
                "operationId": "delete-surgeryappointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Surgeryappointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/surgerytypes": {
            "get": {
                "description": "list surgerytype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List surgerytype entities",
                "operationId": "list-surgerytype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Surgerytype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/surgerytypes/{id}": {
            "get": {
                "description": "get surgerytype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a surgerytype entity by ID",
                "operationId": "get-surgerytype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "surgerytype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Surgerytype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update surgerytype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a surgerytype entity by ID",
                "operationId": "update-surgerytype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Surgerytype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "surgerytype entity",
                        "name": "surgerytype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Surgerytype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Surgerytype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get surgerytype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a surgerytype entity by ID",
                "operationId": "delete-surgerytype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Surgerytype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Bonedisease": {
            "type": "object",
            "properties": {
                "addedTime": {
                    "type": "string"
                },
                "advice": {
                    "type": "string"
                },
                "patientID": {
                    "type": "integer"
                },
                "personnelID": {
                    "type": "integer"
                },
                "remedyID": {
                    "type": "integer"
                }
            }
        },
        "controllers.Checksymptoms": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "disease": {
                    "type": "integer"
                },
                "doctorOrderSheet": {
                    "type": "integer"
                },
                "patient": {
                    "type": "integer"
                },
                "personnel": {
                    "type": "integer"
                }
            }
        },
        "controllers.Dentalappointment": {
            "type": "object",
            "properties": {
                "appointTime": {
                    "type": "string"
                },
                "kindName": {
                    "type": "integer"
                },
                "patientID": {
                    "type": "integer"
                },
                "personnelID": {
                    "type": "integer"
                }
            }
        },
        "controllers.Physicaltherapyrecord": {
            "type": "object",
            "properties": {
                "patient": {
                    "type": "integer"
                },
                "personnel": {
                    "type": "integer"
                },
                "physicaltherapyroom": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "controllers.Surgeryappointment": {
            "type": "object",
            "properties": {
                "appointtime": {
                    "type": "string"
                },
                "patientid": {
                    "type": "integer"
                },
                "personelid": {
                    "type": "integer"
                },
                "surgerytypeid": {
                    "type": "integer"
                }
            }
        },
        "ent.Antenatalinformation": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AntenatalinformationQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AntenatalinformationEdges"
                },
                "gestationalage": {
                    "description": "Gestationalage holds the value of the \"gestationalage\" field.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "time": {
                    "description": "Time holds the value of the \"time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.AntenatalinformationEdges": {
            "type": "object",
            "properties": {
                "patient": {
                    "description": "Patient holds the value of the Patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "personnel": {
                    "description": "Personnel holds the value of the Personnel edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personnel"
                },
                "pregnancystatus": {
                    "description": "Pregnancystatus holds the value of the Pregnancystatus edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Pregnancystatus"
                },
                "risks": {
                    "description": "Risks holds the value of the Risks edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Risks"
                }
            }
        },
        "ent.Bonedisease": {
            "type": "object",
            "properties": {
                "addedTime": {
                    "description": "AddedTime holds the value of the \"addedTime\" field.",
                    "type": "string"
                },
                "advice": {
                    "description": "Advice holds the value of the \"advice\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BonediseaseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BonediseaseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BonediseaseEdges": {
            "type": "object",
            "properties": {
                "patient": {
                    "description": "Patient holds the value of the patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "personnel": {
                    "description": "Personnel holds the value of the personnel edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personnel"
                },
                "remedy": {
                    "description": "Remedy holds the value of the remedy edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Remedy"
                }
            }
        },
        "ent.Checksymptoms": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Date holds the value of the \"date\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ChecksymptomsQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ChecksymptomsEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ChecksymptomsEdges": {
            "type": "object",
            "properties": {
                "disease": {
                    "description": "Disease holds the value of the disease edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Disease"
                },
                "doctorordersheet": {
                    "description": "Doctorordersheet holds the value of the doctorordersheet edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DoctorOrderSheet"
                },
                "patient": {
                    "description": "Patient holds the value of the patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "personnel": {
                    "description": "Personnel holds the value of the personnel edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personnel"
                }
            }
        },
        "ent.Dentalappointment": {
            "type": "object",
            "properties": {
                "appointtime": {
                    "description": "Appointtime holds the value of the \"appointtime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DentalappointmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DentalappointmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DentalappointmentEdges": {
            "type": "object",
            "properties": {
                "dentalkind": {
                    "description": "Dentalkind holds the value of the Dentalkind edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Dentalkind"
                },
                "patient": {
                    "description": "Patient holds the value of the Patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "personnel": {
                    "description": "Personnel holds the value of the Personnel edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personnel"
                }
            }
        },
        "ent.Dentalkind": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DentalkindQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DentalkindEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "kindname": {
                    "description": "Kindname holds the value of the \"kindname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DentalkindEdges": {
            "type": "object",
            "properties": {
                "dentalappointment": {
                    "description": "Dentalappointment holds the value of the Dentalappointment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Dentalappointment"
                    }
                }
            }
        },
        "ent.Disease": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DiseaseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DiseaseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DiseaseEdges": {
            "type": "object",
            "properties": {
                "checksymptoms": {
                    "description": "Checksymptoms holds the value of the Checksymptoms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checksymptoms"
                    }
                }
            }
        },
        "ent.DoctorOrderSheet": {
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name holds the value of the \"Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DoctorOrderSheetQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DoctorOrderSheetEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "note": {
                    "description": "Note holds the value of the \"note\" field.",
                    "type": "string"
                },
                "time": {
                    "description": "Time holds the value of the \"time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DoctorOrderSheetEdges": {
            "type": "object",
            "properties": {
                "checksymptoms": {
                    "description": "Checksymptoms holds the value of the Checksymptoms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checksymptoms"
                    }
                }
            }
        },
        "ent.Patient": {
            "type": "object",
            "properties": {
                "birthday": {
                    "description": "Birthday holds the value of the \"birthday\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PatientQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PatientEdges"
                },
                "gender": {
                    "description": "Gender holds the value of the \"gender\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PatientEdges": {
            "type": "object",
            "properties": {
                "antenatalinformation": {
                    "description": "Antenatalinformation holds the value of the Antenatalinformation edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Antenatalinformation"
                    }
                },
                "bonedisease": {
                    "description": "Bonedisease holds the value of the Bonedisease edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bonedisease"
                    }
                },
                "checksymptoms": {
                    "description": "Checksymptoms holds the value of the Checksymptoms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checksymptoms"
                    }
                },
                "dentalappointment": {
                    "description": "Dentalappointment holds the value of the Dentalappointment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Dentalappointment"
                    }
                },
                "physicaltherapyrecord": {
                    "description": "Physicaltherapyrecord holds the value of the physicaltherapyrecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Physicaltherapyrecord"
                    }
                },
                "surgeryappointment": {
                    "description": "Surgeryappointment holds the value of the Surgeryappointment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Surgeryappointment"
                    }
                }
            }
        },
        "ent.Personnel": {
            "type": "object",
            "properties": {
                "department": {
                    "description": "Department holds the value of the \"department\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PersonnelQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PersonnelEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                },
                "user": {
                    "description": "User holds the value of the \"user\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PersonnelEdges": {
            "type": "object",
            "properties": {
                "antenatalinformation": {
                    "description": "Antenatalinformation holds the value of the Antenatalinformation edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Antenatalinformation"
                    }
                },
                "bonedisease": {
                    "description": "Bonedisease holds the value of the Bonedisease edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bonedisease"
                    }
                },
                "checksymptoms": {
                    "description": "Checksymptoms holds the value of the Checksymptoms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checksymptoms"
                    }
                },
                "dentalappointment": {
                    "description": "Dentalappointment holds the value of the Dentalappointment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Dentalappointment"
                    }
                },
                "physicaltherapyrecord": {
                    "description": "Physicaltherapyrecord holds the value of the physicaltherapyrecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Physicaltherapyrecord"
                    }
                },
                "surgeryappointment": {
                    "description": "Surgeryappointment holds the value of the Surgeryappointment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Surgeryappointment"
                    }
                }
            }
        },
        "ent.Physicaltherapyrecord": {
            "type": "object",
            "properties": {
                "addedTime": {
                    "description": "AddedTime holds the value of the \"addedTime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PhysicaltherapyrecordQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PhysicaltherapyrecordEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PhysicaltherapyrecordEdges": {
            "type": "object",
            "properties": {
                "patient": {
                    "description": "Patient holds the value of the patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "personnel": {
                    "description": "Personnel holds the value of the personnel edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personnel"
                },
                "physicaltherapyroom": {
                    "description": "Physicaltherapyroom holds the value of the physicaltherapyroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Physicaltherapyroom"
                },
                "status": {
                    "description": "Status holds the value of the status edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Status"
                }
            }
        },
        "ent.Physicaltherapyrecords": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ent.Physicaltherapyrecord"
            }
        },
        "ent.Physicaltherapyroom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PhysicaltherapyroomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PhysicaltherapyroomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "physicaltherapyroomname": {
                    "description": "Physicaltherapyroomname holds the value of the \"physicaltherapyroomname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PhysicaltherapyroomEdges": {
            "type": "object",
            "properties": {
                "physicaltherapyrecord": {
                    "description": "Physicaltherapyrecord holds the value of the physicaltherapyrecord edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Physicaltherapyrecord"
                }
            }
        },
        "ent.Pregnancystatus": {
            "type": "object",
            "properties": {
                "Pregnancystatus": {
                    "description": "Pregnancystatus holds the value of the \"Pregnancystatus\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PregnancystatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PregnancystatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PregnancystatusEdges": {
            "type": "object",
            "properties": {
                "antenatalinformation": {
                    "description": "Antenatalinformation holds the value of the Antenatalinformation edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Antenatalinformation"
                }
            }
        },
        "ent.Remedy": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RemedyQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RemedyEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "remedy": {
                    "description": "Remedy holds the value of the \"remedy\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RemedyEdges": {
            "type": "object",
            "properties": {
                "bonedisease": {
                    "description": "Bonedisease holds the value of the Bonedisease edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bonedisease"
                    }
                }
            }
        },
        "ent.Risks": {
            "type": "object",
            "properties": {
                "Risks": {
                    "description": "Risks holds the value of the \"Risks\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RisksQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RisksEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.RisksEdges": {
            "type": "object",
            "properties": {
                "antenatalinformation": {
                    "description": "Antenatalinformation holds the value of the Antenatalinformation edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Antenatalinformation"
                }
            }
        },
        "ent.Status": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "statusname": {
                    "description": "Statusname holds the value of the \"statusname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StatusEdges": {
            "type": "object",
            "properties": {
                "physicaltherapyrecord": {
                    "description": "Physicaltherapyrecord holds the value of the physicaltherapyrecord edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Physicaltherapyrecord"
                }
            }
        },
        "ent.Surgeryappointment": {
            "type": "object",
            "properties": {
                "appoint_time": {
                    "description": "AppointTime holds the value of the \"appoint_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SurgeryappointmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SurgeryappointmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.SurgeryappointmentEdges": {
            "type": "object",
            "properties": {
                "patient": {
                    "description": "Patient holds the value of the Patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "personnel": {
                    "description": "Personnel holds the value of the Personnel edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personnel"
                },
                "surgerytype": {
                    "description": "Surgerytype holds the value of the Surgerytype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Surgerytype"
                }
            }
        },
        "ent.Surgerytype": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SurgerytypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SurgerytypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "typename": {
                    "description": "Typename holds the value of the \"typename\" field.",
                    "type": "string"
                }
            }
        },
        "ent.SurgerytypeEdges": {
            "type": "object",
            "properties": {
                "surgeryappointment": {
                    "description": "Surgeryappointment holds the value of the Surgeryappointment edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Surgeryappointment"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SUT SA Example API",
	Description: "This is a sample server for SUT SE 2563",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
