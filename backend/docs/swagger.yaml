basePath: /api/v1
definitions:
  controllers.Antenatalinformation:
    properties:
      gestationalage:
        type: integer
      patient:
        type: integer
      personnel:
        type: integer
      pregnancystatus:
        type: integer
      risks:
        type: integer
      time:
        type: string
    type: object
  controllers.Bonedisease:
    properties:
      addedTime:
        type: string
      advice:
        type: string
      identificationCard:
        type: string
      patientID:
        type: integer
      personnelID:
        type: integer
      remedyID:
        type: integer
      tel:
        type: string
    type: object
  controllers.Checksymptom:
    properties:
      date:
        type: string
      diseaseID:
        type: integer
      doctorordersheetID:
        type: integer
      identitycard:
        type: string
      note:
        type: string
      patientID:
        type: integer
      personnelID:
        type: integer
      phone:
        type: string
    type: object
  controllers.Dentalappointment:
    properties:
      amount:
        type: integer
      appointTime:
        type: string
      kindName:
        type: integer
      note:
        type: string
      patientID:
        type: integer
      personnelID:
        type: integer
      price:
        type: integer
    type: object
  controllers.Physicaltherapyrecord:
    properties:
      age:
        type: integer
      idnumber:
        type: string
      patient:
        type: integer
      personnel:
        type: integer
      physicaltherapyroom:
        type: integer
      status:
        type: integer
      telephone:
        type: string
      time:
        type: string
    type: object
  controllers.Surgeryappointment:
    properties:
      age:
        type: integer
      appointtime:
        type: string
      note:
        type: string
      patientid:
        type: integer
      personelid:
        type: integer
      phone:
        type: string
      surgerytypeid:
        type: integer
    type: object
  ent.Antenatalinformation:
    properties:
      edges:
        $ref: '#/definitions/ent.AntenatalinformationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the AntenatalinformationQuery when eager-loading is set.
        type: object
      gestationalage:
        description: Gestationalage holds the value of the "gestationalage" field.
        type: integer
      id:
        description: ID of the ent.
        type: integer
      time:
        description: Time holds the value of the "time" field.
        type: string
    type: object
  ent.AntenatalinformationEdges:
    properties:
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the Patient edge.
        type: object
      personnel:
        $ref: '#/definitions/ent.Personnel'
        description: Personnel holds the value of the Personnel edge.
        type: object
      pregnancystatus:
        $ref: '#/definitions/ent.Pregnancystatus'
        description: Pregnancystatus holds the value of the Pregnancystatus edge.
        type: object
      risks:
        $ref: '#/definitions/ent.Risks'
        description: Risks holds the value of the Risks edge.
        type: object
    type: object
  ent.Bonedisease:
    properties:
      addedTime:
        description: AddedTime holds the value of the "addedTime" field.
        type: string
      advice:
        description: Advice holds the value of the "advice" field.
        type: string
      edges:
        $ref: '#/definitions/ent.BonediseaseEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BonediseaseQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      identificationCard:
        description: IdentificationCard holds the value of the "identificationCard"
          field.
        type: string
      tel:
        description: Tel holds the value of the "tel" field.
        type: string
    type: object
  ent.BonediseaseEdges:
    properties:
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the patient edge.
        type: object
      personnel:
        $ref: '#/definitions/ent.Personnel'
        description: Personnel holds the value of the personnel edge.
        type: object
      remedy:
        $ref: '#/definitions/ent.Remedy'
        description: Remedy holds the value of the remedy edge.
        type: object
    type: object
  ent.Checksymptom:
    properties:
      Identitycard:
        description: Identitycard holds the value of the "Identitycard" field.
        type: string
      date:
        description: Date holds the value of the "date" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ChecksymptomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ChecksymptomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      note:
        description: Note holds the value of the "note" field.
        type: string
      phone:
        description: Phone holds the value of the "phone" field.
        type: string
    type: object
  ent.ChecksymptomEdges:
    properties:
      disease:
        $ref: '#/definitions/ent.Disease'
        description: Disease holds the value of the disease edge.
        type: object
      doctorordersheet:
        $ref: '#/definitions/ent.Doctorordersheet'
        description: Doctorordersheet holds the value of the doctorordersheet edge.
        type: object
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the patient edge.
        type: object
      personnel:
        $ref: '#/definitions/ent.Personnel'
        description: Personnel holds the value of the personnel edge.
        type: object
    type: object
  ent.Dentalappointment:
    properties:
      amount:
        description: Amount holds the value of the "amount" field.
        type: integer
      appointtime:
        description: Appointtime holds the value of the "appointtime" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DentalappointmentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DentalappointmentQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      note:
        description: Note holds the value of the "note" field.
        type: string
      price:
        description: Price holds the value of the "price" field.
        type: integer
    type: object
  ent.DentalappointmentEdges:
    properties:
      dentalkind:
        $ref: '#/definitions/ent.Dentalkind'
        description: Dentalkind holds the value of the Dentalkind edge.
        type: object
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the Patient edge.
        type: object
      personnel:
        $ref: '#/definitions/ent.Personnel'
        description: Personnel holds the value of the Personnel edge.
        type: object
    type: object
  ent.Dentalkind:
    properties:
      edges:
        $ref: '#/definitions/ent.DentalkindEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DentalkindQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      kindname:
        description: Kindname holds the value of the "kindname" field.
        type: string
    type: object
  ent.DentalkindEdges:
    properties:
      dentalappointment:
        description: Dentalappointment holds the value of the Dentalappointment edge.
        items:
          $ref: '#/definitions/ent.Dentalappointment'
        type: array
    type: object
  ent.Disease:
    properties:
      disease:
        description: Disease holds the value of the "disease" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DiseaseEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DiseaseQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DiseaseEdges:
    properties:
      checksymptom:
        description: Checksymptom holds the value of the Checksymptom edge.
        items:
          $ref: '#/definitions/ent.Checksymptom'
        type: array
    type: object
  ent.Doctorordersheet:
    properties:
      Name:
        description: Name holds the value of the "Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DoctorordersheetEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DoctorordersheetQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DoctorordersheetEdges:
    properties:
      checksymptom:
        description: Checksymptom holds the value of the Checksymptom edge.
        items:
          $ref: '#/definitions/ent.Checksymptom'
        type: array
    type: object
  ent.Patient:
    properties:
      birthday:
        description: Birthday holds the value of the "birthday" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PatientEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PatientQuery when eager-loading is set.
        type: object
      gender:
        description: Gender holds the value of the "gender" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.PatientEdges:
    properties:
      antenatalinformation:
        description: Antenatalinformation holds the value of the Antenatalinformation
          edge.
        items:
          $ref: '#/definitions/ent.Antenatalinformation'
        type: array
      bonedisease:
        description: Bonedisease holds the value of the Bonedisease edge.
        items:
          $ref: '#/definitions/ent.Bonedisease'
        type: array
      checksymptom:
        description: Checksymptom holds the value of the Checksymptom edge.
        items:
          $ref: '#/definitions/ent.Checksymptom'
        type: array
      dentalappointment:
        description: Dentalappointment holds the value of the Dentalappointment edge.
        items:
          $ref: '#/definitions/ent.Dentalappointment'
        type: array
      physicaltherapyrecord:
        description: Physicaltherapyrecord holds the value of the physicaltherapyrecord
          edge.
        items:
          $ref: '#/definitions/ent.Physicaltherapyrecord'
        type: array
      surgeryappointment:
        description: Surgeryappointment holds the value of the Surgeryappointment
          edge.
        items:
          $ref: '#/definitions/ent.Surgeryappointment'
        type: array
    type: object
  ent.Personnel:
    properties:
      department:
        description: Department holds the value of the "department" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PersonnelEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PersonnelQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
      user:
        description: User holds the value of the "user" field.
        type: string
    type: object
  ent.PersonnelEdges:
    properties:
      antenatalinformation:
        description: Antenatalinformation holds the value of the Antenatalinformation
          edge.
        items:
          $ref: '#/definitions/ent.Antenatalinformation'
        type: array
      bonedisease:
        description: Bonedisease holds the value of the Bonedisease edge.
        items:
          $ref: '#/definitions/ent.Bonedisease'
        type: array
      checksymptom:
        description: Checksymptom holds the value of the Checksymptom edge.
        items:
          $ref: '#/definitions/ent.Checksymptom'
        type: array
      dentalappointment:
        description: Dentalappointment holds the value of the Dentalappointment edge.
        items:
          $ref: '#/definitions/ent.Dentalappointment'
        type: array
      physicaltherapyrecord:
        description: Physicaltherapyrecord holds the value of the physicaltherapyrecord
          edge.
        items:
          $ref: '#/definitions/ent.Physicaltherapyrecord'
        type: array
      surgeryappointment:
        description: Surgeryappointment holds the value of the Surgeryappointment
          edge.
        items:
          $ref: '#/definitions/ent.Surgeryappointment'
        type: array
    type: object
  ent.Physicaltherapyrecord:
    properties:
      age:
        description: Age holds the value of the "age" field.
        type: integer
      appointtime:
        description: Appointtime holds the value of the "appointtime" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PhysicaltherapyrecordEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PhysicaltherapyrecordQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      idnumber:
        description: Idnumber holds the value of the "idnumber" field.
        type: string
      telephone:
        description: Telephone holds the value of the "telephone" field.
        type: string
    type: object
  ent.PhysicaltherapyrecordEdges:
    properties:
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the patient edge.
        type: object
      personnel:
        $ref: '#/definitions/ent.Personnel'
        description: Personnel holds the value of the personnel edge.
        type: object
      physicaltherapyroom:
        $ref: '#/definitions/ent.Physicaltherapyroom'
        description: Physicaltherapyroom holds the value of the physicaltherapyroom
          edge.
        type: object
      status:
        $ref: '#/definitions/ent.Status'
        description: Status holds the value of the status edge.
        type: object
    type: object
  ent.Physicaltherapyroom:
    properties:
      edges:
        $ref: '#/definitions/ent.PhysicaltherapyroomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PhysicaltherapyroomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      physicaltherapyroomname:
        description: Physicaltherapyroomname holds the value of the "physicaltherapyroomname"
          field.
        type: string
    type: object
  ent.PhysicaltherapyroomEdges:
    properties:
      physicaltherapyrecord:
        description: Physicaltherapyrecord holds the value of the physicaltherapyrecord
          edge.
        items:
          $ref: '#/definitions/ent.Physicaltherapyrecord'
        type: array
    type: object
  ent.Pregnancystatus:
    properties:
      Pregnancystatus:
        description: Pregnancystatus holds the value of the "Pregnancystatus" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PregnancystatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PregnancystatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PregnancystatusEdges:
    properties:
      antenatalinformation:
        description: Antenatalinformation holds the value of the Antenatalinformation
          edge.
        items:
          $ref: '#/definitions/ent.Antenatalinformation'
        type: array
    type: object
  ent.Remedy:
    properties:
      edges:
        $ref: '#/definitions/ent.RemedyEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RemedyQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      remedy:
        description: Remedy holds the value of the "remedy" field.
        type: string
    type: object
  ent.RemedyEdges:
    properties:
      bonedisease:
        description: Bonedisease holds the value of the Bonedisease edge.
        items:
          $ref: '#/definitions/ent.Bonedisease'
        type: array
    type: object
  ent.Risks:
    properties:
      Risks:
        description: Risks holds the value of the "Risks" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RisksEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RisksQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RisksEdges:
    properties:
      antenatalinformation:
        description: Antenatalinformation holds the value of the Antenatalinformation
          edge.
        items:
          $ref: '#/definitions/ent.Antenatalinformation'
        type: array
    type: object
  ent.Status:
    properties:
      edges:
        $ref: '#/definitions/ent.StatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      statusname:
        description: Statusname holds the value of the "statusname" field.
        type: string
    type: object
  ent.StatusEdges:
    properties:
      physicaltherapyrecord:
        description: Physicaltherapyrecord holds the value of the physicaltherapyrecord
          edge.
        items:
          $ref: '#/definitions/ent.Physicaltherapyrecord'
        type: array
    type: object
  ent.Surgeryappointment:
    properties:
      age:
        description: Age holds the value of the "age" field.
        type: integer
      appoint_time:
        description: AppointTime holds the value of the "appoint_time" field.
        type: string
      edges:
        $ref: '#/definitions/ent.SurgeryappointmentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SurgeryappointmentQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      note:
        description: Note holds the value of the "note" field.
        type: string
      phone:
        description: Phone holds the value of the "phone" field.
        type: string
    type: object
  ent.SurgeryappointmentEdges:
    properties:
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the Patient edge.
        type: object
      personnel:
        $ref: '#/definitions/ent.Personnel'
        description: Personnel holds the value of the Personnel edge.
        type: object
      surgerytype:
        $ref: '#/definitions/ent.Surgerytype'
        description: Surgerytype holds the value of the Surgerytype edge.
        type: object
    type: object
  ent.Surgerytype:
    properties:
      edges:
        $ref: '#/definitions/ent.SurgerytypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SurgerytypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      typename:
        description: Typename holds the value of the "typename" field.
        type: string
    type: object
  ent.SurgerytypeEdges:
    properties:
      surgeryappointment:
        description: Surgeryappointment holds the value of the Surgeryappointment
          edge.
        items:
          $ref: '#/definitions/ent.Surgeryappointment'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /Pregnancystatuss:
    post:
      consumes:
      - application/json
      description: Create pregnancystatus
      operationId: create-pregnancystatus
      parameters:
      - description: Pregnancystatus entity
        in: body
        name: pregnancystatus
        required: true
        schema:
          $ref: '#/definitions/ent.Pregnancystatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Pregnancystatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create pregnancystatus
  /Riskss:
    post:
      consumes:
      - application/json
      description: Create risks
      operationId: create-risks
      parameters:
      - description: Risks entity
        in: body
        name: risks
        required: true
        schema:
          $ref: '#/definitions/ent.Risks'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Risks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create risks
  /antenatalinformations:
    get:
      description: list antenatalinformation entities
      operationId: list-antenatalinformation
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Antenatalinformation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List antenatalinformation entities
    post:
      consumes:
      - application/json
      description: Create antenatalinformation
      operationId: create-antenatalinformation
      parameters:
      - description: Antenatalinformation entity
        in: body
        name: antenatalinformation
        required: true
        schema:
          $ref: '#/definitions/controllers.Antenatalinformation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Antenatalinformation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create antenatalinformation
  /antenatalinformations/{id}:
    delete:
      description: get antenatalinformation by ID
      operationId: delete-antenatalinformation
      parameters:
      - description: Antenatalinformation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a antenatalinformation entity by ID
    get:
      description: get antenatalinformation by ID
      operationId: get-antenatalinformation
      parameters:
      - description: Antenatalinformation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Antenatalinformation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a antenatalinformation entity by ID
    put:
      consumes:
      - application/json
      description: update antenatalinformation by ID
      operationId: update-antenatalinformation
      parameters:
      - description: Antenatalinformation ID
        in: path
        name: id
        required: true
        type: integer
      - description: Antenatalinformation entity
        in: body
        name: antenatalinformation
        required: true
        schema:
          $ref: '#/definitions/ent.Antenatalinformation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Antenatalinformation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a antenatalinformation entity by ID
  /bonediseases:
    get:
      description: list bonedisease entities
      operationId: list-bonedisease
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bonedisease'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List bonedisease entities
    post:
      consumes:
      - application/json
      description: Create bonedisease
      operationId: create-bonedisease
      parameters:
      - description: Bonedisease entity
        in: body
        name: bonedisease
        required: true
        schema:
          $ref: '#/definitions/controllers.Bonedisease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bonedisease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create bonedisease
  /bonediseases/{id}:
    delete:
      description: get bonedisease by ID
      operationId: delete-bonedisease
      parameters:
      - description: Bonedisease ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a bonedisease entity by ID
  /checksymptoms:
    get:
      description: list checksymptom entities
      operationId: list-checksymptom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Checksymptom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List checksymptom entities
    post:
      consumes:
      - application/json
      description: Create checksymptom
      operationId: create-checksymptom
      parameters:
      - description: Checksymptom entity
        in: body
        name: checksymptom
        required: true
        schema:
          $ref: '#/definitions/controllers.Checksymptom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Checksymptom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create checksymptom
  /checksymptoms/{id}:
    delete:
      description: get checksymptom by ID
      operationId: delete-checksymptom
      parameters:
      - description: Checksymptom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a checksymptom entity by ID
  /dentalappointments:
    get:
      description: list dentalappointment entities
      operationId: list-dentalappointment
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Dentalappointment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List dentalappointment entities
    post:
      consumes:
      - application/json
      description: Create dentalappointment
      operationId: create-dentalappointment
      parameters:
      - description: dentalappointment entity
        in: body
        name: dentalappointment
        required: true
        schema:
          $ref: '#/definitions/controllers.Dentalappointment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentalappointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create dentalappointment
  /dentalappointments/{id}:
    delete:
      description: get dentalappointment by ID
      operationId: delete-dentalappointment
      parameters:
      - description: dentalappointment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a dentalappointment entity by ID
    get:
      description: get dentalappointment by ID
      operationId: get-dentalappointment
      parameters:
      - description: Dentalappointment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentalappointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a dentalappointment entity by ID
  /dentalkinds:
    get:
      description: list dentalkind entities
      operationId: list-dentalkind
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Dentalkind'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List dentalkind entities
    post:
      consumes:
      - application/json
      description: Create dentalkind
      operationId: create-dentalkind
      parameters:
      - description: dentalkind entity
        in: body
        name: dentalkind
        required: true
        schema:
          $ref: '#/definitions/ent.Dentalkind'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentalkind'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create dentalkind
  /dentalkinds/{id}:
    delete:
      description: get dentalkind by ID
      operationId: delete-dentalkind
      parameters:
      - description: Dentalkind ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a dentalkind entity by ID
    get:
      description: get dentalkind by ID
      operationId: get-dentalkind
      parameters:
      - description: Dentalkind ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentalkind'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a dentalkind entity by ID
    put:
      consumes:
      - application/json
      description: update dentalkind by ID
      operationId: update-dentalkind
      parameters:
      - description: Dentalkind ID
        in: path
        name: id
        required: true
        type: integer
      - description: Dentalkind entity
        in: body
        name: dentalkind
        required: true
        schema:
          $ref: '#/definitions/ent.Dentalkind'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentalkind'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a dentalkind entity by ID
  /diseases:
    get:
      description: list disease entities
      operationId: list-disease
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Disease'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List disease entities
    post:
      consumes:
      - application/json
      description: Create disease
      operationId: create-disease
      parameters:
      - description: Disease entity
        in: body
        name: disease
        required: true
        schema:
          $ref: '#/definitions/ent.Disease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Disease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create disease
  /diseases/{id}:
    delete:
      description: get disease by ID
      operationId: delete-disease
      parameters:
      - description: Disease ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a disease entity by ID
    get:
      description: get disease by ID
      operationId: get-disease
      parameters:
      - description: Disease ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Disease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a disease entity by ID
    put:
      consumes:
      - application/json
      description: update disease by ID
      operationId: update-disease
      parameters:
      - description: Disease ID
        in: path
        name: id
        required: true
        type: integer
      - description: Disease entity
        in: body
        name: disease
        required: true
        schema:
          $ref: '#/definitions/ent.Disease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Disease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a disease entity by ID
  /doctorordersheets:
    get:
      description: list doctorordersheet entities
      operationId: list-doctorordersheet
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Doctorordersheet'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List doctorordersheet entities
    post:
      consumes:
      - application/json
      description: Create doctorordersheet
      operationId: create-doctorordersheet
      parameters:
      - description: Doctorordersheet entity
        in: body
        name: doctorordersheet
        required: true
        schema:
          $ref: '#/definitions/ent.Doctorordersheet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Doctorordersheet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create doctorordersheet
  /doctorordersheets/{id}:
    delete:
      description: get doctorordersheet by ID
      operationId: delete-doctorordersheet
      parameters:
      - description: Doctorordersheet ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a doctorordersheet entity by ID
    get:
      description: get doctorordersheet by ID
      operationId: get-doctorordersheet
      parameters:
      - description: Doctorordersheet ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Doctorordersheet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a doctorordersheet entity by ID
    put:
      consumes:
      - application/json
      description: update doctorordersheet by ID
      operationId: update-doctorordersheet
      parameters:
      - description: Doctorordersheet ID
        in: path
        name: id
        required: true
        type: integer
      - description: Doctorordersheet entity
        in: body
        name: doctorordersheet
        required: true
        schema:
          $ref: '#/definitions/ent.Doctorordersheet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Doctorordersheet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
  /patients:
    get:
      description: list patient entities
      operationId: list-patient
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Patient'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List patient entities
    post:
      consumes:
      - application/json
      description: Create patient
      operationId: create-patient
      parameters:
      - description: Patient entity
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/ent.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create patient
  /patients/{id}:
    delete:
      description: get patient by ID
      operationId: delete-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a patient entity by ID
    get:
      description: get patient by ID
      operationId: get-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a patient entity by ID
    put:
      consumes:
      - application/json
      description: update patient by ID
      operationId: update-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      - description: Patient entity
        in: body
        name: Patient
        required: true
        schema:
          $ref: '#/definitions/ent.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a patient entity by ID
  /personnels:
    get:
      description: list Personnel entities
      operationId: list-personnel
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Personnel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List personnel entities
    post:
      consumes:
      - application/json
      description: Create personnel
      operationId: create-personnel
      parameters:
      - description: Personnel entity
        in: body
        name: personnel
        required: true
        schema:
          $ref: '#/definitions/ent.Personnel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Personnel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create personnel
  /personnels/{id}:
    delete:
      description: get personnel by ID
      operationId: delete-personnel
      parameters:
      - description: Personnel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a personnel entity by ID
    get:
      description: get personnel by ID
      operationId: get-personnel
      parameters:
      - description: Personnel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Personnel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a personnel entity by ID
    put:
      consumes:
      - application/json
      description: update personnel by ID
      operationId: update-personnel
      parameters:
      - description: Personnel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Personnel entity
        in: body
        name: Personnel
        required: true
        schema:
          $ref: '#/definitions/ent.Personnel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Personnel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a personnel entity by ID
  /physicaltherapyrecords:
    get:
      description: list physicaltherapyrecord entities
      operationId: list-physicaltherapyrecord
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Physicaltherapyrecord'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List physicaltherapyrecord entities
    post:
      consumes:
      - application/json
      description: Create physicaltherapyrecord
      operationId: create-physicaltherapyrecord
      parameters:
      - description: Physicaltherapyrecord entity
        in: body
        name: physicaltherapyrecord
        required: true
        schema:
          $ref: '#/definitions/controllers.Physicaltherapyrecord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Physicaltherapyrecord'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create physicaltherapyrecord
  /physicaltherapyrooms:
    get:
      description: list physicaltherapyroom entities
      operationId: list-physicaltherapyroom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Physicaltherapyroom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List physicaltherapyroom entities
    post:
      consumes:
      - application/json
      description: Create physicaltherapyroom
      operationId: create-physicaltherapyroom
      parameters:
      - description: Physicaltherapyroom entity
        in: body
        name: physicaltherapyroom
        required: true
        schema:
          $ref: '#/definitions/ent.Physicaltherapyroom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Physicaltherapyroom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create physicaltherapyroom
  /physicaltherapyrooms/{id}:
    get:
      description: get physicaltherapyroom by ID
      operationId: get-physicaltherapyroom
      parameters:
      - description: Physicaltherapyroom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Physicaltherapyroom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a physicaltherapyroom entity by ID
  /pregnancystatuss:
    get:
      description: list pregnancystatus entities
      operationId: list-pregnancystatus
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Pregnancystatus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List pregnancystatus entities
  /pregnancystatuss/{id}:
    get:
      description: get pregnancystatus by ID
      operationId: get-pregnancystatus
      parameters:
      - description: Pregnancystatus ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Pregnancystatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a pregnancystatus entity by ID
  /remedys:
    get:
      description: list remedy entities
      operationId: list-remedy
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Remedy'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List remedy entities
    post:
      consumes:
      - application/json
      description: Create remedy
      operationId: create-remedy
      parameters:
      - description: Remedy entity
        in: body
        name: remedy
        required: true
        schema:
          $ref: '#/definitions/ent.Remedy'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Remedy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create remedy
  /remedys/{id}:
    delete:
      description: get remedy by ID
      operationId: delete-remedy
      parameters:
      - description: Remedy ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a remedy entity by ID
    get:
      description: get remedy by ID
      operationId: get-remedy
      parameters:
      - description: Remedy ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Remedy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a remedy entity by ID
    put:
      consumes:
      - application/json
      description: update remedy by ID
      operationId: update-remedy
      parameters:
      - description: Remedy ID
        in: path
        name: id
        required: true
        type: integer
      - description: Remedy entity
        in: body
        name: Remedy
        required: true
        schema:
          $ref: '#/definitions/ent.Remedy'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Remedy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a remedy entity by ID
  /riskss:
    get:
      description: list risks entities
      operationId: list-risks
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Risks'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List risks entities
  /riskss/{id}:
    get:
      description: get risks by ID
      operationId: get-risks
      parameters:
      - description: Risks ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Risks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a risks entity by ID
  /statuss:
    get:
      description: list status entities
      operationId: list-status
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Status'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List status entities
    post:
      consumes:
      - application/json
      description: Create status
      operationId: create-status
      parameters:
      - description: Status entity
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/ent.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create status
  /statuss/{id}:
    get:
      description: get status by ID
      operationId: get-status
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a status entity by ID
  /surgeryappointments:
    get:
      description: list surgeryappointment entities
      operationId: list-surgeryappointment
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Surgeryappointment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List surgeryappointment entities
    post:
      consumes:
      - application/json
      description: Create Surgeryappointment
      operationId: create-Surgeryappointment
      parameters:
      - description: Surgeryappointment entity
        in: body
        name: Surgeryappointment
        required: true
        schema:
          $ref: '#/definitions/controllers.Surgeryappointment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Surgeryappointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create Surgeryappointment
  /surgeryappointments/{id}:
    delete:
      description: get surgeryappointment by ID
      operationId: delete-surgeryappointment
      parameters:
      - description: Surgeryappointment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a surgeryappointment entity by ID
    get:
      description: get surgeryappointment by ID
      operationId: get-surgeryappointment
      parameters:
      - description: surgeryappointment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Surgeryappointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a surgeryappointment entity by ID
    put:
      consumes:
      - application/json
      description: update surgeryappointment by ID
      operationId: update-surgeryappointment
      parameters:
      - description: Surgeryappointment ID
        in: path
        name: id
        required: true
        type: integer
      - description: surgeryappointment entity
        in: body
        name: surgeryappointment
        required: true
        schema:
          $ref: '#/definitions/ent.Surgeryappointment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Surgeryappointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a surgeryappointment entity by ID
  /surgerytypes:
    get:
      description: list surgerytype entities
      operationId: list-surgerytype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Surgerytype'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List surgerytype entities
  /surgerytypes/{id}:
    delete:
      description: get surgerytype by ID
      operationId: delete-surgerytype
      parameters:
      - description: Surgerytype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a surgerytype entity by ID
    get:
      description: get surgerytype by ID
      operationId: get-surgerytype
      parameters:
      - description: surgerytype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Surgerytype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a surgerytype entity by ID
    put:
      consumes:
      - application/json
      description: update surgerytype by ID
      operationId: update-surgerytype
      parameters:
      - description: Surgerytype ID
        in: path
        name: id
        required: true
        type: integer
      - description: surgerytype entity
        in: body
        name: surgerytype
        required: true
        schema:
          $ref: '#/definitions/ent.Surgerytype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Surgerytype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a surgerytype entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
