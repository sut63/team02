// Code generated by entc, DO NOT EDIT.

package antenatalinformation

const (
	// Label holds the string label denoting the antenatalinformation type in the database.
	Label = "antenatalinformation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGestationalage holds the string denoting the gestationalage field in the database.
	FieldGestationalage = "gestationalage"
	// FieldAddedTime holds the string denoting the added_time field in the database.
	FieldAddedTime = "added_time"

	// EdgePersonnel holds the string denoting the personnel edge name in mutations.
	EdgePersonnel = "Personnel"
	// EdgePatient holds the string denoting the patient edge name in mutations.
	EdgePatient = "Patient"
	// EdgePregnancystatusid holds the string denoting the pregnancystatusid edge name in mutations.
	EdgePregnancystatusid = "Pregnancystatusid"
	// EdgeRisksid holds the string denoting the risksid edge name in mutations.
	EdgeRisksid = "Risksid"

	// Table holds the table name of the antenatalinformation in the database.
	Table = "antenatalinformations"
	// PersonnelTable is the table the holds the Personnel relation/edge.
	PersonnelTable = "antenatalinformations"
	// PersonnelInverseTable is the table name for the Personnel entity.
	// It exists in this package in order to avoid circular dependency with the "personnel" package.
	PersonnelInverseTable = "personnels"
	// PersonnelColumn is the table column denoting the Personnel relation/edge.
	PersonnelColumn = "Personnel_id"
	// PatientTable is the table the holds the Patient relation/edge.
	PatientTable = "antenatalinformations"
	// PatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PatientInverseTable = "patients"
	// PatientColumn is the table column denoting the Patient relation/edge.
	PatientColumn = "Patient_id"
	// PregnancystatusidTable is the table the holds the Pregnancystatusid relation/edge.
	PregnancystatusidTable = "antenatalinformations"
	// PregnancystatusidInverseTable is the table name for the Pregnancystatus entity.
	// It exists in this package in order to avoid circular dependency with the "pregnancystatus" package.
	PregnancystatusidInverseTable = "pregnancystatuses"
	// PregnancystatusidColumn is the table column denoting the Pregnancystatusid relation/edge.
	PregnancystatusidColumn = "pregnancystatus_antenatalinformation"
	// RisksidTable is the table the holds the Risksid relation/edge.
	RisksidTable = "antenatalinformations"
	// RisksidInverseTable is the table name for the Risks entity.
	// It exists in this package in order to avoid circular dependency with the "risks" package.
	RisksidInverseTable = "risks"
	// RisksidColumn is the table column denoting the Risksid relation/edge.
	RisksidColumn = "risks_antenatalinformation"
)

// Columns holds all SQL columns for antenatalinformation fields.
var Columns = []string{
	FieldID,
	FieldGestationalage,
	FieldAddedTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Antenatalinformation type.
var ForeignKeys = []string{
	"Patient_id",
	"Personnel_id",
	"pregnancystatus_antenatalinformation",
	"risks_antenatalinformation",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// GestationalageValidator is a validator for the "gestationalage" field. It is called by the builders before save.
	GestationalageValidator func(string) error
)
