// Code generated by entc, DO NOT EDIT.

package surgerytype

const (
	// Label holds the string label denoting the surgerytype type in the database.
	Label = "surgerytype"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTypename holds the string denoting the typename field in the database.
	FieldTypename = "typename"

	// EdgeSurgeryappointment holds the string denoting the surgeryappointment edge name in mutations.
	EdgeSurgeryappointment = "Surgeryappointment"

	// Table holds the table name of the surgerytype in the database.
	Table = "surgerytypes"
	// SurgeryappointmentTable is the table the holds the Surgeryappointment relation/edge.
	SurgeryappointmentTable = "surgeryappointments"
	// SurgeryappointmentInverseTable is the table name for the Surgeryappointment entity.
	// It exists in this package in order to avoid circular dependency with the "surgeryappointment" package.
	SurgeryappointmentInverseTable = "surgeryappointments"
	// SurgeryappointmentColumn is the table column denoting the Surgeryappointment relation/edge.
	SurgeryappointmentColumn = "surgerytype_surgeryappointment"
)

// Columns holds all SQL columns for surgerytype fields.
var Columns = []string{
	FieldID,
	FieldTypename,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TypenameValidator is a validator for the "typename" field. It is called by the builders before save.
	TypenameValidator func(string) error
)
