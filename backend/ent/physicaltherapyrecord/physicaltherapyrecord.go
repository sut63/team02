// Code generated by entc, DO NOT EDIT.

package physicaltherapyrecord

const (
	// Label holds the string label denoting the physicaltherapyrecord type in the database.
	Label = "physicaltherapyrecord"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAddedTime holds the string denoting the added_time field in the database.
	FieldAddedTime = "added_time"

	// EdgePersonnel holds the string denoting the personnel edge name in mutations.
	EdgePersonnel = "personnel"
	// EdgePatient holds the string denoting the patient edge name in mutations.
	EdgePatient = "patient"
	// EdgePhysicaltherapyroom holds the string denoting the physicaltherapyroom edge name in mutations.
	EdgePhysicaltherapyroom = "physicaltherapyroom"
	// EdgeStatus holds the string denoting the status edge name in mutations.
	EdgeStatus = "status"

	// Table holds the table name of the physicaltherapyrecord in the database.
	Table = "physicaltherapyrecords"
	// PersonnelTable is the table the holds the personnel relation/edge.
	PersonnelTable = "physicaltherapyrecords"
	// PersonnelInverseTable is the table name for the Personnel entity.
	// It exists in this package in order to avoid circular dependency with the "personnel" package.
	PersonnelInverseTable = "personnels"
	// PersonnelColumn is the table column denoting the personnel relation/edge.
	PersonnelColumn = "Personnel_id"
	// PatientTable is the table the holds the patient relation/edge.
	PatientTable = "physicaltherapyrecords"
	// PatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PatientInverseTable = "patients"
	// PatientColumn is the table column denoting the patient relation/edge.
	PatientColumn = "Patient_id"
	// PhysicaltherapyroomTable is the table the holds the physicaltherapyroom relation/edge.
	PhysicaltherapyroomTable = "physicaltherapyrecords"
	// PhysicaltherapyroomInverseTable is the table name for the Physicaltherapyroom entity.
	// It exists in this package in order to avoid circular dependency with the "physicaltherapyroom" package.
	PhysicaltherapyroomInverseTable = "physicaltherapyrooms"
	// PhysicaltherapyroomColumn is the table column denoting the physicaltherapyroom relation/edge.
	PhysicaltherapyroomColumn = "physicaltherapyroom_physicaltherapyrecord"
	// StatusTable is the table the holds the status relation/edge.
	StatusTable = "physicaltherapyrecords"
	// StatusInverseTable is the table name for the Status entity.
	// It exists in this package in order to avoid circular dependency with the "status" package.
	StatusInverseTable = "status"
	// StatusColumn is the table column denoting the status relation/edge.
	StatusColumn = "status_physicaltherapyrecord"
)

// Columns holds all SQL columns for physicaltherapyrecord fields.
var Columns = []string{
	FieldID,
	FieldAddedTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Physicaltherapyrecord type.
var ForeignKeys = []string{
	"Patient_id",
	"Personnel_id",
	"physicaltherapyroom_physicaltherapyrecord",
	"status_physicaltherapyrecord",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
